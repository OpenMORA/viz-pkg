#ifndef CDESTADOSIMPLE_H
#define CDESTADOSIMPLE_H

//(*Headers(CDEstadoSimple)
#include <wx/dialog.h>
#include <wx/checkbox.h>
#include <wx/combobox.h>
#include <wx/notebook.h>
#include <wx/textctrl.h>
//*)

#include <string>
#include <utility>

#include "EstadoSimple.h"
#include "TabInstrRobot.h"
#include "TabSentencias.h"

namespace InterfazSancho	{
class PanelGraf;
/**
  * This dialog box is used to set the configuration of a simple state. Since most of the actual computations of a state machine tend to happen in simple states, this
  * dialog box is more elaborated than those of compound and parallel ones. Aside from switching between final/non final state, there are three presets (single action,
  * loop and wait from event) for the most common simple state behaviours. However, there is still a "free definition" configuration which allows complete freedom.
  * The creation of this dialog box already calls ShowModal, and pressing OK automatically reconfigures the state, so the calling method shouldn't do nothing but
  * creating and deleting the dialog.
  * The skeleton of this class has been partly generated by codeblocks.
  * \bug When the dialog is called on a "final" state, the corresponding checkbox will start checked. However, the "OK/cancel" button streak would appear just below
  * the basic contents of the dialog, and not below an empty pane, so unchecking the checkbox hides it under the tabbed pane, rendering the buttons unusable. Because
  * of that, the buttons appear on top instead of the bottom. This should be fixed, although it's only a visual issue.
  * \sa EstadoSimple
  */
class CDEstadoSimple: public wxDialog
{
	public:

		CDEstadoSimple(const EstadoSimplePtr &es,wxWindow* parent);	//!< Constructor.
		virtual ~CDEstadoSimple()	{}	//!< Virtual destructor.

		//(*Declarations(CDEstadoSimple)
		wxTextCtrl *nombreEstado;	//!< Text control to enter the name of the state.
		TabInstrRobot *t1r;	//!< Panel to configurate the robot action in the "single action" preset.
		TabInstrRobot *t2r;	//!< Panel to configurate the robot action in the "loop" preset.
		wxTextCtrl *t2veces;	//!< Control to configurate the amount of times the action is executed, in the "loop" preset.
		wxComboBox *t3NombreEvento;	//!< Control to choose the event this state is awaiting for, in the "wait for event/condition" preset.
		wxTextCtrl *t3Condicion;	//!< Control to enter the condition this state is awaiting for, in the "wait for event/condition" preset.
		TabSentencias *t4;	//!< Actions panel, component of the "free definition" preset.
		wxCheckBox *checkFinal;	//!< This checkbox controls whether the state is normal or final. There may be any amount of final states, including zero, in a machine.
		wxNotebook *tabs;	//!< Tabbed panel used to select between presets.
		//*)

	protected:

		//(*Identifiers(CDEstadoSimple)
		static const long ID_NOMBREESTADO;
		static const long ID_T2_VECES;
		static const long ID_T3_NOMBREEVENTO;
		static const long ID_T3_CONDICION;
		static const long ID_FINAL;
		static const long ID_OK;
		static const long ID_CANCEL;
		//*)

	private:

		//(*Handlers(CDEstadoSimple)
		EstadoSimplePtr estado;	//!< Simple state to which this dialog refers.
		int pos;	//!< Private temporary variable used as a cache for the currently selected preset.
		std::string dato,dato2,varcuenta,vartotal;	//!< Temporary class-wide variables.
		//*)

		void OnFinalCheckBox(wxEvent &);
		void OnOK(wxEvent &);
		void OnCancel(wxEvent &);

		void enviarDestino(const std::string &s);	//!< In each of the first three presets, this method is used to create the transition between states.

		DECLARE_EVENT_TABLE()
		static void changeAction(void *pairOfObjects);	//!< Private method used to interchange information between the two TabInstrRobot objects.
		static void changeID(void *pairOfObjects);	//!< Private method used to interchange information between the two TabInstrRobot objects.
		std::pair<TabInstrRobot *,TabInstrRobot *> p1to2,p2to1;	//!< Private variables used to interchange information between the two TabInstrRobot objects.
};
}	//End of namespace
#endif
