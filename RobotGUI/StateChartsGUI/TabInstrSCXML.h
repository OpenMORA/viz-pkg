#ifndef TABINSTRSCXML_H
#define TABINSTRSCXML_H

//(*Headers(TabInstrSCXML)
#include <wx/panel.h>
#include <wx/sizer.h>
#include <wx/dialog.h>
#include <wx/combobox.h>
#include <wx/textctrl.h>
#include <wx/choicebk.h>
//*)

#include <string>
#include <vector>
#include <mrpt/base.h>

#include "Accion.h"
namespace InterfazSancho	{
class Main;
/**
  * This class contains a piece of interface designed to configure a control instruction. This class's skeleton is partly generated by codeblocks.
  * \sa Accion, CDTabInstrSCXML, TabInstrRobot
  */
class TabInstrSCXML: public wxPanel
{
	public:

		TabInstrSCXML(wxWindow* parent,const Main *m,const AccionPtr &instr=AccionPtr(),wxWindowID id=wxID_ANY,const wxPoint& pos=wxDefaultPosition,const wxSize& size=wxDefaultSize);	//!< Constructor
		virtual ~TabInstrSCXML()	{}	//!< Destructor

		//(*Declarations(TabInstrSCXML)
		wxChoicebook *comboPrincipal;	//!< Combo with the main instructions.

		wxTextCtrl *ifCondicion;	//!< Text control of the "if" instruction panel.
		wxTextCtrl *elseifCondicion;	//!< Text control of the "if" instruction panel.
		wxComboBox *assignVariable;	//!< Combo control of the "assign" instruction panel.
		wxTextCtrl *assignExpresion;	//!< Text control of the "assign" instruction panel.
		wxComboBox *sendEvento;	//!< Combo control of the "send" instruction panel.
		wxTextCtrl *sendDelay;	//!< Numeric text control of the "send" instruction panel.
		wxComboBox *eventEvento;	//!< Combo control of the "event" instruction panel.

		//*)

		static inline void getListaAccionesSCXML(std::vector<wxString> &out)	{	//!< Retrieves the set of control actions' names.
			out.assign(reinterpret_cast<wxString *>(&acciones),7+reinterpret_cast<wxString *>(&acciones));
		}
		static inline void getListaAccionesSCXML(std::vector<std::string> &out)	{	//!< Retrieves the set of control actions' names.
			out.resize(7);
			for (size_t i=0;i<7;++i) out[i]=std::string(acciones[i].mbc_str());
		}
		AccionPtr getAccion();	//!< Gets the selected action.

	protected:

		//(*Identifiers(TabInstrSCXML)
		static const long ID_COMBOPRINCIPAL;
		static const long ID_IF_CONDICION;
		static const long ID_ELSEIF_CONDICION;
		static const long ID_ASSIGN_VARIABLE;
		static const long ID_ASSIGN_EXPRESION;
		static const long ID_SEND_EVENTO;
		static const long ID_SEND_DELAY;
		static const long ID_EVENT_EVENTO;
		//*)

	private:

		//(*Handlers(TabInstrSCXML)
		//*)
		static wxString acciones[7];	//!< List of action names.
		size_t currentSelection;	//!< Selected SCXML instruction identifier (0-6).

		void OnIfCondicion(wxEvent &event);
		void OnElseifCondicion(wxEvent &event);
		void OnSendEvento(wxEvent &event);
		void OnEventEvento(wxEvent &event);

		DECLARE_EVENT_TABLE()
};

/**
  * This class models a dialog with only a TabInstrSCXML object and the typical streak of buttons (OK / Cancel).
  * \sa TabInstrSCXML
  */
class CDTabInstrSCXML:public wxDialog	{
	const static long ID_OK;
	const static long ID_CANCEL;
private:
	void OnOK(wxEvent &);
	void OnCancel(wxEvent &);
public:
	TabInstrSCXML *base;	//!< Base object. Typically, a call to base->getAccion would be performed after ShowModal returned wxID_OK.
	CDTabInstrSCXML(wxWindow *parent,Main *main,const AccionPtr &instr=AccionPtr(NULL),const wxString &tit=_(""));	//!< Constructor.
	virtual ~CDTabInstrSCXML()	{}	//!< Destructor.
};
}	//End of namespace
#endif
