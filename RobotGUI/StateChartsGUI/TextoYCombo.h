#ifndef TEXTOYCOMBO_H
#define TEXTOYCOMBO_H

//(*Headers(TextoYCombo)
#include <wx/sizer.h>
#include <wx/stattext.h>
#include <wx/panel.h>
#include <wx/choice.h>
//*)

#include "Accion.h"
#include "Instruccion.h"
#include <string>
#include <vector>

namespace InterfazSancho	{
/**
  * This panel contains simply a text label and a combo box, and is used to select between a list of available arguments. With a few changes, this could be adapted so
  * that the type "FREE_STRING" (or similar) would hold a text control instead of a combo box.
  * This class contains some code generated by Codeblocks.
  * \sa ContainerMultiple, Instruccion, ParametroInstruccion
  */
class TextoYCombo: public wxPanel
{
	public:
		TextoYCombo(const std::string &t,wxWindow* parent,wxWindowID id=wxID_ANY,const wxPoint& pos=wxDefaultPosition,const wxSize& size=wxDefaultSize);	//!< Constructor.
		virtual ~TextoYCombo()	{}	//!< Destructor.
		bool getSeleccion(ParametroInstruccion &) const;	//!< Gets the currently selected parameter. Returns false on fail.
		bool setSeleccion(const ParametroInstruccion &);	//!< Sets the selected parameter. Returns false on fail.

		//(*Declarations(TextoYCombo)
		wxStaticText* StaticText1;	//!< Label.
		wxChoice* Choice1;	//!< Combo box.
		//*)

	protected:

		//(*Identifiers(TextoYCombo)
		static const long ID_STATICTEXT1;
		static const long ID_CHOICE1;
		//*)

	private:

		//(*Handlers(TextoYCombo)
		//*)
		const std::string tipo;	//!< Type of the argument.
		std::vector<ParametroInstruccion> params;	//!< List of available parameters for this type.

		DECLARE_EVENT_TABLE()
};
}	//End of namespace
#endif
